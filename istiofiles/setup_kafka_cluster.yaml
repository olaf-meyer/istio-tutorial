apiVersion: v1
kind: Template
metadata:
  name: kafka-setup-for-demo-app
parameters:
- name: DEPLOYMENT_NAMESPACE
  description: "Namespace to which the application will be deployed"
  # value: olaf-customer
  required: true
# - name: CLUSTER_DOMAIN
#   description: "Domain of the OpenShift cluster"
#   required: true
#   # value: apps.poc2.int.consol.de
# - name: KEYCLOAK_DOMAIN
#   description: "Domain of the keycloak server in the OpenSHift cluster"
#   value: skeycloak-olaf-sso.apps.poc2.int.consol.de
objects:
- apiVersion: kafka.strimzi.io/v1beta1
  kind: Kafka
  metadata:
    name: demo-app-log-cluster
    labels: {}
    namespace: ${DEPLOYMENT_NAMESPACE}
  spec:
    kafka:
      config:
        offsets.topic.replication.factor: 1
        transaction.state.log.replication.factor: 1
        transaction.state.log.min.isr: 1
        log.message.format.version: '2.5'
      version: 2.5.0
      storage:
        type: ephemeral
      replicas: 1
      # listeners:
      #   plain:
      #     authentication:
      #       type: scram-sha-512
      #   tls:
      #     authentication:
      #       type: tls
      listeners:
        plain: {}
        tls: {}
      template:
        statefulset:
          metadata:
            labels:
              app: kafka-cluster-demo-app-log
              version: 1.0
        pod:
          metadata:
            labels:
              app: kafka-cluster-demo-app-log
              version: 1.0
            annotations:
              # prometheus.io/scrape: "true"
              sidecar.istio.io/inject: "true"
    entityOperator:
      topicOperator:
        reconciliationIntervalSeconds: 90
      userOperator:
        reconciliationIntervalSeconds: 120
    zookeeper:
      storage:
        type: ephemeral
      replicas: 1
      template:
        statefulset:
          metadata:
            labels:
              app: kafka-zookeeper-demo-app-log
              version: 1.0
        pod:
          metadata:
            labels:
              app: kafka-zookeeper-demo-app-log
              version: 1.0
            annotations:
              # prometheus.io/scrape: "true"
              sidecar.istio.io/inject: "true"
- apiVersion: kafka.strimzi.io/v1beta1
  kind: KafkaTopic
  metadata:
    name: demo-application-log-customer
    labels:
      strimzi.io/cluster: demo-app-log-cluster
    namespace: ${DEPLOYMENT_NAMESPACE}
  spec:
    config:
      retention.ms: 604800000
      segment.bytes: 1073741824
    partitions: 10
    replicas: 1
- apiVersion: kafka.strimzi.io/v1beta1
  kind: KafkaTopic
  metadata:
    name: demo-application-log-preference
    labels:
      strimzi.io/cluster: demo-app-log-cluster
    namespace: ${DEPLOYMENT_NAMESPACE}
  spec:
    config:
      retention.ms: 604800000
      segment.bytes: 1073741824
    partitions: 10
    replicas: 1
- apiVersion: kafka.strimzi.io/v1beta1
  kind: KafkaTopic
  metadata:
    name: demo-application-log-recommendation
    labels:
      strimzi.io/cluster: demo-app-log-cluster
    namespace: ${DEPLOYMENT_NAMESPACE}
  spec:
    config:
      retention.ms: 604800000
      segment.bytes: 1073741824
    partitions: 10
    replicas: 1